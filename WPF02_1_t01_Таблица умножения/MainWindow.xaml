<Window x:Class="WPF02_1_t01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF02_1_t01"
        mc:Ignorable="d"
        Title="Тренажер вивчення таблиці множення" Height="450" Width="800" FontFamily="Arial" MinHeight="350" MinWidth="600" Icon="Multiplication_table.ico">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="Margin">
            <Setter Property="Control.Margin" Value="8"></Setter>
        </Style>
        <Style x:Key="ViewTextBlock">
            <Setter Property="Control.HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="Control.VerticalAlignment" Value="Center"></Setter>
            <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
            <Setter Property="Control.Width" Value="75"></Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <ControlTemplate x:Key="StackButtonTemplate" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="1,0" Width="26">
                <Border x:Name="border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Padding="1">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="0,0.5,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="True">
                    <Setter Property="Control.IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="False">
                    <Setter Property="Control.IsEnabled" Value="False"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="StackButton">
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style x:Key="Color0" TargetType="{x:Type Button}">
            <Style.Resources>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#18a689"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#16977d"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#77aba1"/>
            </Style.Resources>
            <Setter Property="Border.Background" Value="#1ab394"/>
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style x:Key="Color1" TargetType="{x:Type Button}">
            <Style.Resources>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#23c6c8"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#1ea8aa"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#75a7a8"/>
            </Style.Resources>
            <Setter Property="Border.Background" Value="#21b9bb"/>
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style x:Key="Color2" TargetType="{x:Type Button}">
            <Style.Resources>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#1a7bb9"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#1870a8"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#6d91a8"/>
            </Style.Resources>
            <Setter Property="Border.Background" Value="#1c84c6"/>
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style x:Key="Color3" TargetType="{x:Type Button}">
            <Style.Resources>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#f7984a"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#e19643"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#f6c794"/>
            </Style.Resources>
            <Setter Property="Border.Background" Value="#f7a54a"/>
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style x:Key="Color4" TargetType="{x:Type Button}">
            <Style.Resources>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ed3447"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#d3404f"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#d4727c"/>
            </Style.Resources>
            <Setter Property="Border.Background" Value="#ec4758"/>
            <Setter Property="Button.Template" Value="{StaticResource StackButtonTemplate}"/>
        </Style>

        <Style TargetType="Grid" x:Key="GridStyle">
            <Style.Resources>
                <Style TargetType="Viewbox" BasedOn="{StaticResource Margin}"></Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource ViewTextBlock}"></Style>
            </Style.Resources>
        </Style>
        <Style TargetType="StackPanel" x:Key="StackStyle">
            <Style.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource StackButton}"/>
            </Style.Resources>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="#85e5a0" BorderThickness="0" Background="#85e5a0" SnapsToDevicePixels="True" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#8DEDA8"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#8DEDA8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#7DDD98"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#7DDD98"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" TargetName="contentPresenter" Value="Стоп"/>
                                <Setter Property="Background" TargetName="border" Value="#FF9494"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF9494"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border" Value="#FFA1A1"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFA1A1"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsPressed" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" TargetName="border" Value="#F78C8C"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#F78C8C"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HideShow">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="False">
                    <Setter Property="Control.Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="True">
                    <Setter Property="Control.Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="EnableDisable">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="False">
                    <Setter Property="Control.IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="True">
                    <Setter Property="Control.IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OpacityChange">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="False">
                    <Setter Property="Control.Opacity" Value="0.4"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=toggleButton}" Value="True">
                    <Setter Property="Control.Opacity" Value="1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ProgressBar">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar" >
                        <Grid x:Name="Root">
                            <Border 
                                Name="PART_Track" 
                                CornerRadius="0" 
                                Background="#FFE6E6E6"
                                BorderBrush="#FFBCBCBC"
                                BorderThickness="1"/>
                            <Border 
                                Name="PART_Indicator" 
                                CornerRadius="0" 
                                Background="#369EE0" 
                                BorderBrush="#369EE0" 
                                BorderThickness="0" 
                                HorizontalAlignment="Left" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColorBlue" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ViewTextBlock}">
            <Setter Property="Foreground" Value="#1c84c6"/>
        </Style>

        <Style x:Key="ColorGreen" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ViewTextBlock}">
            <Setter Property="Foreground" Value="#43A35E"/>
        </Style>

        <Style x:Key="ColorRed" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ViewTextBlock}">
            <Setter Property="Foreground" Value="#CF6464"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Viewbox>
            <Grid>
                <Label Content="Рівень складності:" HorizontalAlignment="Left" Margin="10,10" VerticalAlignment="Center"/>
                <ComboBox HorizontalAlignment="Left" Margin="125,0,0,0" VerticalAlignment="Center" Width="120"
                          SelectedIndex="{Binding SelectedIndex1, Mode=TwoWay}"
                          Style="{StaticResource EnableDisable}">
                    <ComboBoxItem>Таблиця НА</ComboBoxItem>
                    <ComboBoxItem IsSelected="True">Таблиця ДО</ComboBoxItem>
                </ComboBox>
                <ComboBox HorizontalAlignment="Left" Margin="260,0,0,0" VerticalAlignment="Center" Width="42"
                          ItemsSource="{Binding ItemSource}" 
                          SelectedIndex="{Binding SelectedIndex2, Mode=TwoWay}"
                          Style="{StaticResource EnableDisable}"/>
                <TextBlock HorizontalAlignment="Left" Margin="325,0,0,0" VerticalAlignment="Center" Width="44" Text="Питань:"/>
                <Slider HorizontalAlignment="Left" Margin="380,-10,0,0" VerticalAlignment="Center" Width="100"
                        TickFrequency="25" Minimum="25" Maximum="100" Ticks="25 50 75 100" IsSnapToTickEnabled="True" TickPlacement="BottomRight"
                        Value="{Binding NumberOfQuestions, Mode=TwoWay}"
                        Style="{StaticResource HideShow}">
                    <Slider.LayoutTransform>
                        <ScaleTransform ScaleY="0.7" ScaleX="0.7" CenterX="15" CenterY="15"/>
                    </Slider.LayoutTransform>
                </Slider>
                <local:NumberedTickBar HorizontalAlignment="Left" Margin="380,-18,0,0" VerticalAlignment="Center" Width="60" TickFrequency="25" Minimum="25" Maximum="100" Ticks="25 50 75 100"
                                       Style="{StaticResource HideShow}"/>
                <local:ProgressBarValue x:Name="prBarValue" HorizontalAlignment="Left" Width="70" Height="15" Margin="380,0,0,0"
                                        Value1="{Binding Path=NumberOfAnswers, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay}"
                                        Value2="{Binding Path=NumberOfQuestions, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        Visibility="{Binding IsChecked, ElementName=toggleButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        />
                <ToggleButton x:Name="toggleButton" Style="{StaticResource ToggleButtonStyle1}"
                              HorizontalAlignment="Left" Margin="476,0,15,0" VerticalAlignment="Center" Width="64" Height="28" Content="Старт" Click="ButtonStart_Click"
                              IsChecked="{Binding IsStarted, Mode=TwoWay}"/>
            </Grid>
        </Viewbox>

        <Grid Grid.Row="1" Style="{StaticResource GridStyle}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Viewbox>
                <TextBlock Text="Підказки" Style="{StaticResource ColorBlue}"/>
            </Viewbox>
            <Viewbox Grid.Row="1" >
                <TextBlock Text="{Binding Prompts}" Style="{StaticResource ColorBlue}" Margin="-2"/>
            </Viewbox>
            <Viewbox Grid.Column="1">
                <TextBlock Text="Правильно" Style="{StaticResource ColorGreen}"/>
            </Viewbox>
            <Viewbox Grid.Row="1" Grid.Column="1">
                <TextBlock Text="{Binding CorrectAnswers}" Style="{StaticResource ColorGreen}" Margin="-2"/>
            </Viewbox>
            <Viewbox Grid.Column="2">
                <TextBlock Text="Неправильно" Style="{StaticResource ColorRed}"/>
            </Viewbox>
            <Viewbox Grid.Row="1" Grid.Column="2">
                <TextBlock Text="{Binding IncorrectAnswers}" Style="{StaticResource ColorRed}" Margin="-2"/>
            </Viewbox>
            <Viewbox Grid.Column="3">
                <TextBlock Text="Бали" Style="{StaticResource ColorBlue}"/>
            </Viewbox>
            <Viewbox Grid.Row="1" Grid.Column="3">
                <TextBlock Text="{Binding Points}" Style="{StaticResource ColorBlue}" Margin="-2"/>
            </Viewbox>
        </Grid>
        <Viewbox Grid.Row="2">
            <TextBlock Width="Auto" Text="{Binding DialogString}"
                       Style="{Binding StringStyle}" Margin="20,12"/>
        </Viewbox>
        <Viewbox Grid.Row="3">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                       Text="{Binding ExerciseString}" Foreground="#676a6c" Margin="15,-2,15,6"
                       Style="{StaticResource OpacityChange}"/>
        </Viewbox>
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Viewbox Grid.Column="1" Margin="0,0,0,22">
                <StackPanel Orientation="Horizontal" Style="{StaticResource StackStyle}" Height="16">
                    <Button Margin="2,0,4,0" Visibility="Hidden"/>
                    <Button Style="{Binding ButtonStyles[0]}" Content="{Binding AnswerButtons[0]}" Click="ButtonAnswer_Click"/>
                    <Button Style="{Binding ButtonStyles[1]}" Content="{Binding AnswerButtons[1]}" Click="ButtonAnswer_Click"/>
                    <Button Style="{Binding ButtonStyles[2]}" Content="{Binding AnswerButtons[2]}" Click="ButtonAnswer_Click"/>
                    <Button Style="{Binding ButtonStyles[3]}" Content="{Binding AnswerButtons[3]}" Click="ButtonAnswer_Click"/>
                    <Button Style="{Binding ButtonStyles[4]}" Content="{Binding AnswerButtons[4]}" Click="ButtonAnswer_Click"/>
                    <!--<Button Style="{StaticResource Color0}" Content="{Binding AnswerButtons[0]}" Click="ButtonAnsver_Click"/>
                    <Button Style="{StaticResource Color1}" Content="{Binding AnswerButtons[1]}" Click="ButtonAnsver_Click"/>
                    <Button Style="{StaticResource Color2}" Content="{Binding AnswerButtons[2]}" Click="ButtonAnsver_Click"/>
                    <Button Style="{StaticResource Color3}" Content="{Binding AnswerButtons[3]}" Click="ButtonAnsver_Click"/>
                    <Button Style="{StaticResource Color4}" Content="{Binding AnswerButtons[4]}" Click="ButtonAnsver_Click"/>-->
                    <Button Margin="4,0,2,0" ToolTip="Підказка" Content="?" Click="ButtonPrompt_Click"/>
                </StackPanel>
            </Viewbox>
        </Grid>
    </Grid>
</Window>
