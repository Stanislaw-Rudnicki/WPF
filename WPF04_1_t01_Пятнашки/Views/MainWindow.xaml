<Window x:Class="WPF04_1_t01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF04_1_t01"
        xmlns:ViewModels="clr-namespace:WPF04_1_t01.ViewModels"
        mc:Ignorable="d"
        Title="П'ятнашки" Height="400" Width="380" FontSize="9" MinHeight="400" MinWidth="380" Icon="/WPF04_1_t01;component/15.ico">
    <Window.DataContext>
        <ViewModels:ViewModel/>
    </Window.DataContext>
    
    <Window.Background>
        <ImageBrush ImageSource="Background.png"/>
    </Window.Background>

    <Window.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3DC0C0C0"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#33C0C0C0"/>
        <SolidColorBrush x:Key="Button.IsPlaced.Background" Color="#4FCCE4F7"/>
        <SolidColorBrush x:Key="Button.IsPlaced.MouseOver.Background" Color="#33E5F1FB"/>
        <SolidColorBrush x:Key="Button.IsPlaced.Pressed.Background" Color="#28E5F1FB"/>

        <ControlTemplate x:Key="ListBoxButtonTemplate" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="0" Width="75" Height="75">
                <Border x:Name="border"
                        CornerRadius="0"
                        BorderThickness="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="1">
                    <ContentPresenter x:Name="contentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="Center"
                                      Margin="0,0.5,0,0"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center"
                                      TextBlock.FontSize="40"
                                      TextBlock.FontFamily="Calibri"
                                      TextBlock.FontWeight="Bold"
                                      TextBlock.Foreground="#C8CBD5"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                </Trigger>
                
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                </Trigger>
                
                <DataTrigger Binding="{Binding IsPlaced}" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.IsPlaced.Background}"/>
                </DataTrigger>
                
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsPlaced}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.IsPlaced.MouseOver.Background}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsPlaced}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.IsPlaced.Pressed.Background}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                
                <DataTrigger Binding="{Binding Value}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ListBoxButton">
            <Setter Property="Border.Background" Value="#46C0C0C0"/>
            <Setter Property="Button.Template" Value="{StaticResource ListBoxButtonTemplate}"/>
        </Style>

        <Style TargetType="ListBox" x:Key="ListBoxStyle">
            <Style.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border BorderThickness="0"
                                        Padding="0"
                                        Margin="3">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource ListBoxButton}"/>
            </Style.Resources>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
    </Window.Resources>

    <Viewbox>
        <Grid Height="360" Width="360">
            <ListBox x:Name="puzzle" Style="{StaticResource ListBoxStyle}" ItemsSource="{Binding ItemsPuzzle}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Value}" Command="{Binding DataContext.Click, ElementName=puzzle}" CommandParameter="{Binding Value}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Viewbox>
</Window>
